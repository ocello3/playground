import{T as x,o as E,G as $,p as j,u as H,w as N,v as Y,s as q,h as W,t as P,l as J,c as D,d as L}from"./tools.624a8220.js";import{d as Q}from"./debug.ff8c7f5f.js";import{G as U}from"./GrainPlayer.fd09c64e.js";import{p as w}from"./index.b39c393f.js";class I extends x{constructor(){super(E(I.getDefaults(),arguments,["channels"])),this.name="Split";const t=E(I.getDefaults(),arguments,["channels"]);this._splitter=this.input=this.output=this.context.createChannelSplitter(t.channels),this._internalChannels=[this._splitter]}static getDefaults(){return Object.assign(x.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._splitter.disconnect(),this}}class T extends x{constructor(){super(E(T.getDefaults(),arguments,["type","size"])),this.name="Analyser",this._analysers=[],this._buffers=[];const t=E(T.getDefaults(),arguments,["type","size"]);this.input=this.output=this._gain=new $({context:this.context}),this._split=new I({context:this.context,channels:t.channels}),this.input.connect(this._split),j(t.channels,1);for(let n=0;n<t.channels;n++)this._analysers[n]=this.context.createAnalyser(),this._split.connect(this._analysers[n],n,0);this.size=t.size,this.type=t.type}static getDefaults(){return Object.assign(x.getDefaults(),{size:1024,smoothing:.8,type:"fft",channels:1})}getValue(){return this._analysers.forEach((t,n)=>{const s=this._buffers[n];this._type==="fft"?t.getFloatFrequencyData(s):this._type==="waveform"&&t.getFloatTimeDomainData(s)}),this.channels===1?this._buffers[0]:this._buffers}get size(){return this._analysers[0].frequencyBinCount}set size(t){this._analysers.forEach((n,s)=>{n.fftSize=t*2,this._buffers[s]=new Float32Array(t)})}get channels(){return this._analysers.length}get type(){return this._type}set type(t){H(t==="waveform"||t==="fft",`Analyser: invalid type: ${t}`),this._type=t}get smoothing(){return this._analysers[0].smoothingTimeConstant}set smoothing(t){this._analysers.forEach(n=>n.smoothingTimeConstant=t)}dispose(){return super.dispose(),this._analysers.forEach(t=>t.disconnect()),this._split.dispose(),this._gain.dispose(),this}}class V extends x{constructor(){super(E(V.getDefaults(),arguments)),this.name="MeterBase",this.input=this.output=this._analyser=new T({context:this.context,size:256,type:"waveform"})}dispose(){return super.dispose(),this._analyser.dispose(),this}}class M extends V{constructor(){super(E(M.getDefaults(),arguments,["smoothing"])),this.name="Meter",this._rms=0;const t=E(M.getDefaults(),arguments,["smoothing"]);this.input=this.output=this._analyser=new T({context:this.context,size:256,type:"waveform",channels:t.channels}),this.smoothing=t.smoothing,this.normalRange=t.normalRange}static getDefaults(){return Object.assign(V.getDefaults(),{smoothing:.8,normalRange:!1,channels:1})}getLevel(){return N("'getLevel' has been changed to 'getValue'"),this.getValue()}getValue(){const t=this._analyser.getValue(),s=(this.channels===1?[t]:t).map(a=>{const o=a.reduce((r,l)=>r+l*l,0),i=Math.sqrt(o/a.length);return this._rms=Math.max(i,this._rms*this.smoothing),this.normalRange?this._rms:Y(this._rms)});return this.channels===1?s[0]:s}get channels(){return this._analyser.channels}dispose(){return super.dispose(),this._analyser.dispose(),this}}const F=()=>{const e=["right","right","left","left"];return{marginRate:.2,alignments:e,boxIntervalRate:.005,boxHeightRate:.5/e.length,playbackRateMin:.3,playbackRateMax:3.5,hues:[357,237],saturations:[68,68],brightnesses:[80,80],saturationRange:15,brightnessRange:65,loopRangeLineYPosRate:.65}},K=F(),X=(e,t)=>{t.pages[1].addInput(e,"marginRate",{step:.1,min:.1,max:1})},Z="/playground/assets/track_1.043a5dc7.mp3",B="/playground/assets/track_2.ea523552.mp3",z=async e=>{const t=new J;return await t.load(e),t},f=e=>e.duration,tt=(e,t,n)=>{const s=new U(e).connect(n);return s.volume.value=-5,s.loop=!0,s.loopStart=0,s.grainSize=t,s},C=async()=>{const e=await q(),t=[await z(Z),await z(B)],n=[f(t[0]),f(t[1]),f(t[0]),f(t[1])],s=n.map(()=>new W().toDestination());s.forEach((o,i)=>{o.set({pan:P.map(i,0,n.length,-1,1)})});const a=n.map((o,i)=>tt(t[i%2],o,s[i]));return{se:e,panners:s,players:a,data:{durations:n}}},k=await C(),st=(e,t,n,s)=>{s==2&&e.players.forEach(a=>a.start()),t.loopRetentionFrames.forEach((a,o)=>{a===0&&(e.panners[o].pan.value=n.panValues[o],e.players[o].reverse=t.loopIsReverses[o],e.players[o].loopStart=t.loopStartTimes[o],e.players[o].grainSize=t.loopGrainSizes[o],e.players[o].playbackRate=t.playbackRates[o])})},G=(e,t)=>{const n=e.data.durations,s=n.reduce((h,d)=>d>h?d:h,0),a=n.map(()=>0),o=n.map(h=>h),i=n.map(()=>!1),r=n.map(()=>!1),l=n.map(()=>!1),u=n.map(()=>0),y=n.map(()=>t*.001),b=n.map(()=>0),p=n.map(()=>1),g=n.map(()=>1),c=n.map(()=>new M);return e.players.forEach((h,d)=>h.connect(c[d])),{durations:n,longestDuration:s,loopStartTimes:a,loopEndTimes:o,loopIsReverses:i,loopIsSwitches:r,loopGrainSizes:o,loopIsOvers:l,loopStampTimes:u,loopElapsedTimes:y,loopProgressRates:b,loopRetentionFrames:p,playbackRates:g,volumes:c}},ot=G(k,0),et=(e,t,n)=>{const s={...e};return s.loopRetentionFrames=e.loopRetentionFrames.map((a,o)=>a>0?a-1:e.durations[o]*60),s.loopIsSwitches=s.loopRetentionFrames.map(a=>a===0),s.loopStartTimes=e.loopStartTimes.map((a,o)=>s.loopIsSwitches[o]?Math.random()*e.durations[o]:a),s.loopEndTimes=e.loopEndTimes.map((a,o)=>s.loopIsSwitches[o]?Math.random()*e.durations[o]:a),s.loopIsReverses=e.loopIsReverses.map((a,o)=>s.loopIsSwitches[o]?s.loopStartTimes[o]>s.loopEndTimes[o]:a),s.loopIsOvers=e.loopElapsedTimes.map((a,o)=>a>s.durations[o]/s.playbackRates[o]),s.loopStampTimes=e.loopStampTimes.map((a,o)=>s.loopIsOvers[o]?n*.001:a),s.loopElapsedTimes=e.loopElapsedTimes.map((a,o)=>n*.001-s.loopStampTimes[o]),s.loopProgressRates=s.loopElapsedTimes.map((a,o)=>a/e.durations[o]*s.playbackRates[o]),s.loopGrainSizes=s.loopEndTimes.map((a,o)=>Math.abs(a-s.loopStartTimes[o])),s.playbackRates=e.playbackRates.map((a,o)=>s.loopIsSwitches[o]?P.map(Math.random(),0,1,t.playbackRateMin,t.playbackRateMax):a),s},O=(e,t,n,s)=>{const{marginRate:a}=n,i=t*(1-a)/e.longestDuration,r=s.data.durations.map(R=>R*i),l=n.alignments.map((R,m)=>{const S=t*a*.5;return R==="right"?S:t-r[m]-S}),u=s.data.durations.map((R,m)=>{const S=l[m],A=t/(s.data.durations.length+1)*(m+1);return new w.Vector(S,A)}),y=s.data.durations.map((R,m)=>{const S=l[m],A=t/(s.data.durations.length+1)*(m+1);return new w.Vector(S,A)}),b=u.map((R,m)=>w.Vector.add(R,new w.Vector().set(r[m],0))),p=new w.Vector(t*n.boxIntervalRate,t*n.boxHeightRate),g=u.map((R,m)=>{const S=R.x-b[m].x;return Math.ceil(Math.abs(S/p.x))}),c=g.map((R,m)=>{const S=new w.Vector(0,p.y*-.5);return[w.Vector.add(u[m],S)]}),h=e.loopIsReverses.map(()=>0),d=e.loopIsReverses.map(()=>0),v=e.loopIsReverses.map(()=>[0]),_=u.map(R=>P.map(R.x,0,t,-1,1));return{bufferConvertRateToLength:i,fullLengths:r,margins:l,startPositions:u,endPositions:b,loopStartPositions:u,loopEndPositions:b,currentPositions:y,boxSize:p,boxNumbers:g,boxLAPositionArrays:c,boxHues:h,boxSaturations:d,boxBrightnessArrays:v,panValues:_}};O(ot,100,K,k);const nt=(e,t,n,s)=>{const a={...e};return a.loopStartPositions=e.loopStartPositions.map((o,i)=>{if(!t.loopIsSwitches[i])return o;const r=o.copy(),l=t.loopStartTimes[i]/t.durations[i],y=e.fullLengths[i]*l+e.margins[i];return r.x=y,r}),a.loopEndPositions=e.loopEndPositions.map((o,i)=>{if(!t.loopIsSwitches[i])return o;const r=o.copy(),l=t.loopEndTimes[i]/t.durations[i],y=e.fullLengths[i]*l+e.margins[i];return r.x=y,r}),a.boxNumbers=e.boxNumbers.map((o,i)=>{if(!t.loopIsSwitches[i])return o;const r=a.loopStartPositions[i].x-a.loopEndPositions[i].x;return Math.ceil(Math.abs(r/e.boxSize.x))}),a.currentPositions=e.currentPositions.map((o,i)=>{const l=Math.abs(a.loopEndPositions[i].x-a.loopStartPositions[i].x)*t.loopProgressRates[i];return t.loopIsReverses[i]?(o.x=a.loopStartPositions[i].x-l,o):(o.x=a.loopStartPositions[i].x+l,o)}),a.boxLAPositionArrays=e.boxLAPositionArrays.map((o,i)=>{if(t.loopIsSwitches[i]||t.loopIsOvers[i]){const p=new w.Vector().set(0,e.boxSize.y*-.5);return[w.Vector.add(a.loopStartPositions[i],p)]}const r=t.loopIsReverses[i]?-1:1,l=o[o.length-1],u=Math.abs(a.currentPositions[i].x-l.x),y=Math.round(u/e.boxSize.x);if(y===0)return o;const b=Array.from(Array(y),(p,g)=>{const c=new w.Vector(e.boxSize.x*(g+1)*r,0);return w.Vector.add(l,c)});return o.concat(b)}),a.boxHues=t.loopIsReverses.map(o=>{const i=o?0:1;return n.hues[i]}),a.boxSaturations=t.loopIsReverses.map((o,i)=>{const r=o?1:0,l=n.saturations[r];return P.map(t.playbackRates[i],n.playbackRateMin,n.playbackRateMax,l-n.saturationRange,l+n.saturationRange)}),a.boxBrightnessArrays=a.boxLAPositionArrays.map((o,i)=>{const r=e.boxBrightnessArrays[i],l=o.length-r.length,u=t.volumes[i].getValue(),y=isFinite(u)?u:0,b=t.loopIsReverses[i]?1:0,p=n.brightnesses[b],g=P.map(y,-50,-20,p-n.brightnessRange,p+n.brightnessRange),c=P.constrain(g,p-n.brightnessRange,p+n.brightnessRange);if(l===0)return r[r.length-1]=c,r;if(l>=1){const h=Array.from(Array(l),()=>c);return r.concat(h)}else return o.map(()=>c)}),a.panValues=a.currentPositions.map(o=>P.map(o.x,0,s,-1,1)),a},at=(e,t,n,s)=>{const{startPositions:a,endPositions:o,loopStartPositions:i,loopEndPositions:r,boxLAPositionArrays:l,boxHues:u,boxSaturations:y,boxBrightnessArrays:b,boxSize:p}=e;s.push(),s.noStroke(),l.forEach((g,c)=>{const h=u[c],d=b[c],v=y[c];g.forEach((_,R)=>{s.push();const m=d[R];s.fill(h,m,v),s.rect(_.x,_.y,p.x,p.y),s.pop()})}),s.pop(),s.push(),s.noFill(),s.strokeWeight(1),s.strokeCap(s.SQUARE),a.forEach((g,c)=>{s.push();const h=t.loopIsReverses[c]?0:1,d=n.hues[h],v=n.saturations[h]-n.saturationRange,_=n.saturations[h]-n.brightnessRange*.5;s.stroke(d,v,_),s.line(g.x,g.y+p.y*n.loopRangeLineYPosRate,o[c].x,o[c].y+p.y*n.loopRangeLineYPosRate),s.pop()}),s.pop(),s.push(),s.noFill(),s.strokeWeight(3),s.strokeCap(s.PROJECT),i.forEach((g,c)=>{const h=t.loopIsReverses[c]?0:1,d=n.hues[h],v=n.saturations[h]-n.saturationRange,_=n.brightnesses[h]-n.brightnessRange*.5;s.stroke(d,v,_),s.line(g.x,g.y+p.y*n.loopRangeLineYPosRate,r[c].x,r[c].y+p.y*n.loopRangeLineYPosRate)}),s.pop()},pt=e=>{const t=P.setSize("sketch");let n=D.setController();const s=F();let a,o,i;e.setup=async()=>{i=await C(),a=G(i,e.millis()),o=O(a,t,s,i),e.createCanvas(t,t);const r=D.setGui(e,n,i.se,!1);X(s,r),e.colorMode(e.HSB),e.noLoop(),L(e,t)},e.draw=()=>{if(i===void 0){e.noLoop();return}Q({currentPos:o.currentPositions},5),e.background(255),D.updateController(e,n),a=et(a,s,e.millis()),o=nt(o,a,s,t),at(o,a,s,e),L(e,t),st(i,a,o,e.frameCount)}};export{pt as sketch};
