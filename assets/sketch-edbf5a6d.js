import{T as f,n as L,F as G,o as g,G as _,P as S,r as M,H as z,a as D,e as A,W as N,S as $,t as m,s as B,h as U,O as H,D as J,d as K,c as I}from"./tools-1a30f1ec.js";import{p as u}from"./index-92884420.js";import{C as Q,E as T}from"./Effect-4f039ff2.js";import{S as X}from"./Split-295dec27.js";class Y extends f{constructor(t){super(t),this.name="ToneAudioWorklet",this.workletOptions={},this.onprocessorerror=L;const s=URL.createObjectURL(new Blob([G()],{type:"text/javascript"})),e=this._audioWorkletName();this._dummyGain=this.context.createGain(),this._dummyParam=this._dummyGain.gain,this.context.addAudioWorkletModule(s,e).then(()=>{this.disposed||(this._worklet=this.context.createAudioWorkletNode(e,this.workletOptions),this._worklet.onprocessorerror=this.onprocessorerror.bind(this),this.onReady(this._worklet))})}dispose(){return super.dispose(),this._dummyGain.disconnect(),this._worklet&&(this._worklet.port.postMessage("dispose"),this._worklet.disconnect()),this}}class w extends Y{constructor(){super(g(w.getDefaults(),arguments,["delayTime","resonance"])),this.name="FeedbackCombFilter";const t=g(w.getDefaults(),arguments,["delayTime","resonance"]);this.input=new _({context:this.context}),this.output=new _({context:this.context}),this.delayTime=new S({context:this.context,value:t.delayTime,units:"time",minValue:0,maxValue:1,param:this._dummyParam,swappable:!0}),this.resonance=new S({context:this.context,value:t.resonance,units:"normalRange",param:this._dummyParam,swappable:!0}),M(this,["resonance","delayTime"])}_audioWorkletName(){return z}static getDefaults(){return Object.assign(f.getDefaults(),{delayTime:.1,resonance:.5})}onReady(t){D(this.input,t,this.output);const s=t.parameters.get("delayTime");this.delayTime.setParam(s);const e=t.parameters.get("feedback");this.resonance.setParam(e)}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this.delayTime.dispose(),this.resonance.dispose(),this}}class x extends f{constructor(){super(g(x.getDefaults(),arguments,["frequency","type"])),this.name="OnePoleFilter";const t=g(x.getDefaults(),arguments,["frequency","type"]);this._frequency=t.frequency,this._type=t.type,this.input=new _({context:this.context}),this.output=new _({context:this.context}),this._createFilter()}static getDefaults(){return Object.assign(f.getDefaults(),{frequency:880,type:"lowpass"})}_createFilter(){const t=this._filter,s=this.toFrequency(this._frequency),e=1/(2*Math.PI*s);if(this._type==="lowpass"){const o=1/(e*this.context.sampleRate),a=o-1;this._filter=this.context.createIIRFilter([o,0],[1,a])}else{const o=1/(e*this.context.sampleRate)-1;this._filter=this.context.createIIRFilter([1,-1],[1,o])}this.input.chain(this._filter,this.output),t&&this.context.setTimeout(()=>{this.disposed||(this.input.disconnect(t),t.disconnect())},this.blockTime)}get frequency(){return this._frequency}set frequency(t){this._frequency=t,this._createFilter()}get type(){return this._type}set type(t){this._type=t,this._createFilter()}getFrequencyResponse(t=128){const s=new Float32Array(t);for(let a=0;a<t;a++){const c=Math.pow(a/t,2)*(2e4-20)+20;s[a]=c}const e=new Float32Array(t),o=new Float32Array(t);return this._filter.getFrequencyResponse(s,e,o),e}dispose(){return super.dispose(),this.input.dispose(),this.output.dispose(),this._filter.disconnect(),this}}class b extends f{constructor(){super(g(b.getDefaults(),arguments,["delayTime","resonance","dampening"])),this.name="LowpassCombFilter";const t=g(b.getDefaults(),arguments,["delayTime","resonance","dampening"]);this._combFilter=this.output=new w({context:this.context,delayTime:t.delayTime,resonance:t.resonance}),this.delayTime=this._combFilter.delayTime,this.resonance=this._combFilter.resonance,this._lowpass=this.input=new x({context:this.context,frequency:t.dampening,type:"lowpass"}),this._lowpass.connect(this._combFilter)}static getDefaults(){return Object.assign(f.getDefaults(),{dampening:3e3,delayTime:.1,resonance:.5})}get dampening(){return this._lowpass.frequency}set dampening(t){this._lowpass.frequency=t}dispose(){return super.dispose(),this._combFilter.dispose(),this._lowpass.dispose(),this}}class v extends f{constructor(){super(g(v.getDefaults(),arguments,["channels"])),this.name="Merge";const t=g(v.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(t.channels)}static getDefaults(){return Object.assign(f.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class V extends f{constructor(t){super(t),this.name="StereoEffect",this.input=new _({context:this.context}),this.input.channelCount=2,this.input.channelCountMode="explicit",this._dryWet=this.output=new Q({context:this.context,fade:t.wet}),this.wet=this._dryWet.fade,this._split=new X({context:this.context,channels:2}),this._merge=new v({context:this.context,channels:2}),this.input.connect(this._split),this.input.connect(this._dryWet.a),this._merge.connect(this._dryWet.b),M(this,["wet"])}connectEffectLeft(...t){this._split.connect(t[0],0,0),D(...t),A(t[t.length-1],this._merge,0,0)}connectEffectRight(...t){this._split.connect(t[0],1,0),D(...t),A(t[t.length-1],this._merge,0,1)}static getDefaults(){return Object.assign(f.getDefaults(),{wet:1})}dispose(){return super.dispose(),this._dryWet.dispose(),this._split.dispose(),this._merge.dispose(),this}}class R extends T{constructor(){super(g(R.getDefaults(),arguments,["distortion"])),this.name="Distortion";const t=g(R.getDefaults(),arguments,["distortion"]);this._shaper=new N({context:this.context,length:4096}),this._distortion=t.distortion,this.connectEffect(this._shaper),this.distortion=t.distortion,this.oversample=t.oversample}static getDefaults(){return Object.assign(T.getDefaults(),{distortion:.4,oversample:"none"})}get distortion(){return this._distortion}set distortion(t){this._distortion=t;const s=t*100,e=Math.PI/180;this._shaper.setMap(o=>Math.abs(o)<.001?0:(3+s)*o*20*e/(Math.PI+s*Math.abs(o)))}get oversample(){return this._shaper.oversample}set oversample(t){this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.dispose(),this}}const j=[1557/44100,1617/44100,1491/44100,1422/44100,1277/44100,1356/44100,1188/44100,1116/44100],P=[225,556,441,341];class F extends V{constructor(){super(g(F.getDefaults(),arguments,["roomSize","dampening"])),this.name="Freeverb",this._combFilters=[],this._allpassFiltersL=[],this._allpassFiltersR=[];const t=g(F.getDefaults(),arguments,["roomSize","dampening"]);this.roomSize=new $({context:this.context,value:t.roomSize,units:"normalRange"}),this._allpassFiltersL=P.map(s=>{const e=this.context.createBiquadFilter();return e.type="allpass",e.frequency.value=s,e}),this._allpassFiltersR=P.map(s=>{const e=this.context.createBiquadFilter();return e.type="allpass",e.frequency.value=s,e}),this._combFilters=j.map((s,e)=>{const o=new b({context:this.context,dampening:t.dampening,delayTime:s});return e<j.length/2?this.connectEffectLeft(o,...this._allpassFiltersL):this.connectEffectRight(o,...this._allpassFiltersR),this.roomSize.connect(o.resonance),o}),M(this,["roomSize"])}static getDefaults(){return Object.assign(V.getDefaults(),{roomSize:.7,dampening:3e3})}get dampening(){return this._combFilters[0].dampening}set dampening(t){this._combFilters.forEach(s=>s.dampening=t)}dispose(){return super.dispose(),this._allpassFiltersL.forEach(t=>t.disconnect()),this._allpassFiltersR.forEach(t=>t.disconnect()),this._combFilters.forEach(t=>t.dispose()),this.roomSize.dispose(),this}}const Z=()=>({light:{speed:.005,shadowDistRate:100,lightDistRate:.25},boader:{speed:.001},object:{count:10,speed_min:.1,speed_max:1,lengthRate_min:.1,lengthRate_max:.5},shadow:{colorRate:.7,alpha:35},background:{shadowColor:240,shadowAlpha:220,lightColor:100,lightAlpha:255},synth:{volReducRate:.7,vol_min:-45,vol_max:-15,freq_min:280,freq_max:920}}),tt=(n,t)=>{const s=t.pages[1],e=s.addFolder({title:"light"});e.addInput(n.light,"speed",{step:.001,min:.001,max:.1}),e.addInput(n.light,"shadowDistRate",{step:.1,min:1,max:1e3}),e.addInput(n.light,"lightDistRate",{step:.01,min:.01,max:2}),s.addFolder({title:"boader"}).addInput(n.boader,"speed",{min:1e-4,max:.01});const a=s.addFolder({title:"object"});a.addInput(n.object,"speed_min",{min:.01,max:1}),a.addInput(n.object,"speed_max",{min:.1,max:10}),a.addInput(n.object,"lengthRate_min",{min:.01,max:.3}),a.addInput(n.object,"lengthRate_max",{min:.3,max:1});const i=s.addFolder({title:"shadow"});i.addInput(n.shadow,"alpha",{step:1,min:10,max:250}),i.addInput(n.shadow,"colorRate",{step:.01,min:.1,max:1});const r=t.pages[2].addFolder({title:"synth"});r.addInput(n.synth,"volReducRate",{step:.1,min:.1,max:10}),r.addInput(n.synth,"vol_min",{step:1,min:-60,max:-30}),r.addInput(n.synth,"vol_max",{step:1,min:-30,max:-0}),r.addInput(n.synth,"freq_min",{step:1,min:30,max:500}),r.addInput(n.synth,"freq_max",{step:1,min:500,max:1500})},E=(n,t,s,e)=>{const o=e===void 0,a=(()=>{if(o)return Math.PI+n.angle;const h=e.angle+t.light.speed;return h>Math.PI*2?h-Math.PI*2:h})(),i=(()=>{const h=a<=n.angle,p=a>=Math.PI+n.angle;return h||p})(),c=o?!0:i!=e.isShadow,r=(()=>{const h=a/(Math.PI*2)-n.angle/(Math.PI*2),p=h<0?1+h:h;if(i){const q=p-.5;return m.map(Math.abs(q-.25),0,.25,1,0)}return m.map(Math.abs(p-.25),0,.25,1,0)})(),l=o?new u.Vector(s*.5,s*.5):e.start,d=(()=>{const h=p=>{const q=new u.Vector(0,0);return u.Vector.dist(l,q)*p};return c||o?h(i?t.light.shadowDistRate:t.light.lightDistRate):e.length})(),y=u.Vector.fromAngle(-1*a),k=u.Vector.add(l,u.Vector.mult(y,d));return{start:l,length:d,angle:a,angleRate:r,vec:y,end:k,isShadow:i,isSwitch:c}},O=(n,t,s)=>{const e=s===void 0,o=(()=>{if(e)return Math.PI;const y=s.angle-n.boader.speed;return y<0?Math.PI:y})(),a=u.Vector.fromAngle(o),i=t*Math.sqrt(2),c=new u.Vector(t*.5,t*.5),r=new u.Vector(i*.5*Math.cos(o),i*.5*Math.sin(o)),l=u.Vector.sub(c,r),d=u.Vector.add(c,r);return{vec:a,length:i,start:l,end:d,angle:o}},W=(n,t,s,e)=>{const o=e===void 0,a=(()=>o?Array.from(Array(t.object.count),()=>Math.random()):e.rates.map((h,p)=>e.isOvers[p]?Math.random():h))(),i=a.map(h=>m.map(h,0,1,t.object.speed_min,t.object.speed_max)),c=(()=>o?Array.from(Array(t.object.count),()=>Math.random()*n.length):e.intervals.map((h,p)=>e.isOvers[p]?0:h+i[p]))(),r=c.map(h=>u.Vector.add(n.start,u.Vector.mult(n.vec,h))),l=c.map(()=>u.Vector.fromAngle(n.angle+Math.PI*.5)),d=(()=>o?c.map(()=>Math.random()*s*.5):a.map(p=>m.map(p,0,1,t.object.lengthRate_max,t.object.lengthRate_min)).map(p=>s*p))(),y=r.map((h,p)=>u.Vector.add(h,u.Vector.mult(l[p],d[p]))),k=c.map(h=>h>n.length);return{rates:a,speeds:i,intervals:c,starts:r,vecs:l,lengths:d,ends:y,isOvers:k}},C=(n,t,s)=>{const e=s.starts,o=e.map((l,d)=>m.getIntersection(l,n.end,n.end,s.ends[d])),a=s.ends.map((l,d)=>m.getIntersection(l,o[d],t.start,t.end)),i=e.map((l,d)=>u.Vector.sub(o[d],l)),c=i.map(l=>u.Vector.normalize(l)),r=i.map(l=>u.Vector.mag(l));return{starts:e,ends:o,intersections:a,vecs:c,lengths:r}},et=(n,t,s,e,o)=>{const a=t.starts.map(r=>m.constrain(m.map(r.x,0,o,-1,1),-1,1)),i=t.rates.map(r=>m.map(n.isShadow?r/e.object.count:r*e.synth.volReducRate/e.object.count,0,1,e.synth.vol_min,e.synth.vol_max)),c=s.lengths.map(r=>m.constrain(m.map(r/o,0,72,e.synth.freq_min,e.synth.freq_max),e.synth.freq_min,e.synth.freq_max));return{pans:a,vols:i,freqs:c}},st=async n=>{const t=await B(),s=new F().toDestination();s.dampening=1e3,s.roomSize.value=.8,s.wet.value=.8;const e=new R().connect(s);e.distortion=.3,e.wet.value=.3;const o=Array.from(Array(n.object.count),()=>new U().connect(e)),a=o.map(i=>new H().connect(i).start());return J.mute=!0,{se:t,freeverb:s,dist:e,pans:o,oscs:a}},nt=(n,t)=>{n.pans.forEach((s,e)=>s.pan.value=t.pans[e]),n.oscs.forEach((s,e)=>{s.frequency.value=t.freqs[e],s.volume.value=t.vols[e]})},ot=(n,t,s,e,o,a,i)=>{n.isShadow&&i.background(o.background.shadowColor,o.background.shadowAlpha*n.angleRate),n.isShadow||i.background(o.background.lightColor,o.background.lightAlpha*n.angleRate),i.push(),i.stroke("black"),i.line(t.start.x,t.start.y,t.end.x,t.end.y),i.pop(),i.push(),i.stroke("black"),s.starts.forEach((c,r)=>{const l=s.ends[r];i.line(c.x,c.y,l.x,l.y)}),i.pop(),i.push(),i.noStroke(),e.starts.forEach((c,r)=>{const l=e.ends[r],d=e.intersections[r];i.fill(0,o.shadow.alpha*n.angleRate),i.triangle(c.x,c.y,l.x,l.y,s.ends[r].x,s.ends[r].y);const y=n.isShadow?0:o.background.shadowColor*o.shadow.colorRate;i.fill(y,o.background.shadowAlpha*n.angleRate),i.triangle(c.x,c.y,l.x,l.y,d.x,d.y)}),i.pop(),K(i,a)},lt=n=>{const t=m.setSize("sketch");let s=I.setController();const e=Z();let o,a,i,c,r,l;n.setup=async()=>{l=await st(e),a=O(e,t),o=E(a,e,t),i=W(a,e,t),c=C(o,a,i),n.createCanvas(t,t);const d=I.setGui(n,s,l.se,!1);tt(e,d),n.noLoop()},n.draw=()=>{if(l===void 0){n.noLoop();return}I.updateController(n,s),a=O(e,t,a),o=E(a,e,t,o),i=W(a,e,t,i),c=C(o,a,i),ot(o,a,i,c,e,t,n),r=et(o,i,c,e,t),nt(l,r)}};export{lt as sketch};
